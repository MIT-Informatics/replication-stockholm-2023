---
title: "altman-demetrio-tarasenko Stockholm 2023 replication"
format: html
toc: TRUE
code-tools: TRUE
code-fold: TRUE
embed-resources: TRUE
editor: visual
bibliography: references.bib
---

# **A comment on Cavaillé and Ferwerda (2022)**

Micah Altman[^1][^2] (MIT) [escience\@mit.edu](mailto:escience@mit.edu){.email}, Hans Gaebler (Harvard) [jgaebler\@fas.harvard.edu](mailto:jgaebler@fas.harvard.edu){.email}, Georgy Tarasenko (Cornell) [gt298\@cornell.edu](mailto:gt298@cornell.edu){.email}

[^1]: Corresponding author.

[^2]: All authors declare that they have no financial support or conflict of interest in this publication.

## Abstract

Cavaillé and Ferwerda [@cavaillé2023] examine the effect of granting immigrants access to the welfare state in Austria during 2006 on the support for far-right parties. In their preferred specification, they find that -- [***magnitude and uncertainty of main effect (p-value)***]{.underline} **--**= supporting the main substantive claim that increasing welfare benefits to immigrants increases support for far-right parties. Moderating this, based on a subset of data from Vienna, they find that -- [***magnitude and uncertainty of secondary effect (p-value)***]{.underline} *--* support was concentrated in districts with a high proportion of public housing beneficiaries or low-end rentals.

First, we reproduce the paper's main and secondary analysis, and find that the results are computationally reproducible at the reported level of accuracy, and are robust to variation of the

Second, we test the robustness of the conclusions to (1)... (2)...

We find that ...

## Introduction

```{r setup}
#| include: false
#| echo: false

library(tidyverse)
library(magrittr,include.only="%<>%")
library(broom)
library(gt)
library(patchwork)

tidy_results<-function(resls){
  purrr::map(resls, \(x) tidy(x)) %>%
    list_rbind(names_to="repl_id")
}

tidy_summary<-function(resls){
  purrr::map(resls, \(x) glance(summary(x))) %>%
    list_rbind(names_to="repl_id")
}

# workaround absence of tidier for some of the packages used
glance.summary.lm_robust <- function(x,...) {
 x[c("r.squared","adj.r.squared","df.residual","res_var","nobs")] %>% as_tibble()
}

glance.summary.glm <- function(x,...) {
 x[c("aic","df.residual")] %>% as_tibble()
}

theme_set(theme_bw())
```

***Briefly describe the main data sources, method, policy or treatment, time period and population for which the estimates apply. Then describe the main scientific claims (descriptive or causal) and robustness checks if those that are relevant for your re-analysis or replication. Quote the original part of the study that has the main scientific claim(s) including page number(s). As suggested in the Guide for Accelerating Computational Reproducibility in the Social Sciences (<https://bitss.github.io/ACRE/>), structure your summary of the main findings and methodology as follows: "The paper tested the effect of X on Y for population P, using method M. The main results show an effect of magnitude E (specify units and standard errors)" or "The paper estimated the value of Y (estimated or predicted) for population P under dimensions X using method M. The main results presented an estimate of magnitude E (specify units and standard errors)".***

We obtained the published replication data set [@Cavaille2023] from the Harvard Dataverse archive, where it had been deposited for public use by the authors. The replication data set included the final processed data used to produce the paper results, along with R code to replicate figures and tables. The data was sufficient to check computational repoducibility but posed challenges for conceptual reproducibility because it provided neither copies of the source data, nor links to or citations of the original data sources (which were described generally). Further although the replication data did include additional measures not used in publication, these were largely undocumented, and hence difficult to reliably interpret.

*\_ Next, summarize your reproduction and/or replication. Start by stating how you have obtained the data and codes and if the original author(s) answered your request(s) a/nd questions. Indicate the repository where your programs and data are located. Then proceed with a description of your [conceptual reproducibility](https://i4replication.org/definitions.html) by describing if you have found coding error(s) and how they affect the main conclusions.\_*

*\_ For replication, we adopt the definitions [here](https://i4replication.org/definitions.html). For robustness replicability, clearly state your robustness checks and how they affect the main point estimates. For direct and conceptual replications, clearly describe the new data. For conceptual replications, also describe the new procedures or they differ from the original study. Different procedures implies a different experimental design and/or analysis for experiments and different methods and/or analysis for observational data.\_*

*For all three replication types, be precise and summarize your results as follows: "Implementing this robustness increases/decreases the size of the main point estimate for outcome Y by X and the estimate is not anymore statistically significant at the X% level" or "Implementing this robustness check has no effect on the magnitude or the statistical significance of the main point estimate." Also report the coefficient (or other effect size), the standard error of the coefficient/effect size, the test statistic including df if relevant, and the p-value for all tests.*

-   many variables in the dataset are not documented

## Reproducibility

### Simple Direct Reproduction (Calibration)

#### Reproduction of Table 1 - Model 1 (Primary Result)

```{r main-result-reproduction}
#| echo: false

requireNamespace("haven")
requireNamespace("estimatr")

# main replication data from authors
austria_authors.df <-
  haven::read_dta("authors replication materials/Austria_final.dta")

# verbatim results from published article for main model
# NOTE: p-value represents upper bound of actual p-value, since only a '*' notation used in reporting

tidy_m1_original.df <-
  structure(
    list(
      term = c(
        "(Intercept)",
        "dv_pop_01",
        "pct_noneu_06",
        "dv_pop_01:pct_noneu_06"
      ),
      estimate = c(0.04, 0.02,-0.02, 0.67),
      std.error = c(0, 0.03, 0.03, 0.17),
      p.value = c(0.05, 1,  0.05, 0.05),
      repl_id = c("original", "original", "original",  "original")
    ),
    row.names = c(NA,-4L),
    class = "data.frame"
  )

# reproduce authors model using original code for OLS with 'robust' errors'

m1.formula  <- formula("d_rr_06 ~ dv_pop_01*pct_noneu_06")

results_m1_computational.lmr <-
  estimatr::lm_robust(m1.formula,   data = austria_authors.df)

repro_m1.df <- tidy_results(list(comp=results_m1_computational.lmr)) %>% 
   bind_rows(tidy_m1_original.df)

repro_m1_summary.df <- tidy_summary(list(comp=results_m1_computational.lmr))

repro_m1.df %>% group_by(repl_id) %>% gt()

repro_m1_summary.df %>% group_by(repl_id) %>% gt()
```

#### Reproduction of Table 2 - Model 1 (Secondary Result)

```{r secondary-result-reproduction}
vienna_authors.df <- 
  haven::read_dta("authors replication materials/vienna_final.dta")

m2.formula<- formula("dv ~  (pctrental + pctpublic_w_zsp)")

results_m2_computational.lmr <-
  estimatr::lm_robust(m2.formula,   data = vienna_authors.df, 
                      clusters = tract_key)
tidy_m2_original.df <-
  structure(
    list(
      term = c(
        "(Intercept)",
        "pctrental",
        "pctpublic_w_zsp"
      ),
      estimate = c(0.04, 0.03,-0.09),
      std.error = c(0.01, 0.01, 0.01),
      p.value = c(0.05, 0.05,  0.05),
      repl_id = c("original", "original", "original")
    ),
    row.names = c(NA,-3L),
    class = "data.frame"
  )

repro_m2.df <- tidy_results(list(comp=results_m2_computational.lmr)) %>% 
   bind_rows(tidy_m2_original.df)

repro_m2_summary.df <- tidy_summary(list(comp=results_m2_computational.lmr))

repro_m2.df %>% group_by(repl_id) %>% gt()

repro_m2_summary.df %>% group_by(repl_id) %>% gt()
```

#### Summary - Direct Reproducibility

-   Main result - reproducible with original data & code

-   Secondary result - reproducible with original data & code

-   Comments: specific p-values, measures of fit, cluster variable missingness

    -   Appendix does provide some additional detail on number of observations -- though not for models in table & 2 -- provides no additional measures of fit, or precision on p-values

### Computational robustness

Generally, even with a fixed statistical model family and specification results may vary with the estimation algorithm used and specific software's implementation of it. [@altman2004] We evaluate the computational robustness of the model by using alternative algorithms and implementations.

#### Primary Result

```{r alternate-estimations-m1}
requireNamespace("arm")

results_m1_statlm.lm <-
  stats::lm(m1.formula, data = austria_authors.df)
results_m1_statglm.glm <-
  stats::glm(m1.formula, data = austria_authors.df)
results_m1_statbayeslm.glm <-
  arm::bayesglm(m1.formula, data = austria_authors.df, 
                prior.scale=Inf, prior.df=Inf)

#Note: could also add nls, bayesglm, mle2 -- would require re-expressing current formula in different syntax, and renaming results matrix

ml.ls <- list(lmrobust = results_m1_computational.lmr,
              lm=results_m1_statlm.lm,
              glm=results_m1_statglm.glm,
              bayes=results_m1_statbayeslm.glm)

alt_est_m1.df <- tidy_results(ml.ls)
alt_est_m1_summary.df <- tidy_summary(ml.ls)

alt_est_m1.df  %>% group_by(repl_id) %>% gt()
alt_est_m1_summary.df %>% group_by(repl_id) %>% gt()

rm(ml.ls,results_m1_statlm.lm,results_m1_statglm.glm,results_m1_statbayeslm.glm)
```

#### Secondary Result

```{r alternate-estimations-m2}

requireNamespace("arm")

results_m2_statlm.lm <-
  stats::lm(m2.formula, data = vienna_authors.df)
results_m2_statglm.glm <-
  stats::glm(m2.formula, data = vienna_authors.df)
results_m2_statbayeslm.glm <-
  arm::bayesglm(m2.formula, data = vienna_authors.df, 
                prior.scale=Inf, prior.df=Inf)

#Note: could also add nls, bayesglm, mle2 -- would require re-expressing current formula in different syntax, and renaming results matrix

ml.ls <- list(lmrobust = results_m2_computational.lmr,
              lm=results_m2_statlm.lm,
              glm=results_m2_statglm.glm,
              bayes=results_m2_statbayeslm.glm)

alt_est_m2.df <- tidy_results(ml.ls)
alt_est_m2_summary.df <- tidy_summary(ml.ls)

alt_est_m2.df  %>% group_by(repl_id) %>% gt()
alt_est_m2_summary.df %>% group_by(repl_id) %>% gt()
rm(ml.ls,results_m2_statlm.lm,results_m2_statglm.glm,results_m2_statbayeslm.glm)
```

#### Summary - Computation Robustness of Reproducibility

-   Robust to variations of software and algorithm

## Replication:

*Clearly state/describe which type of replication you are conducting. See definitions at the beginning of this document. For robustness replicability, present your robustness checks and how they impact the main point estimates one by one so that it is clear how each modification to the specification/analysis impacts the main conclusions. Then you may combine them. Also, clearly state why you conduct each specific robustness check and/or modify the setting/model.*

### Alternate OLS Specification (covariate robustness)

-   Alternate covariate specification

-   Simpler model

-   Clustered standard errors

#### Alternate Covariates & Model 1

```{r alternate-variables-m1}

#NOTE: could also explore  alternate methods for computing robust standard errors (e.g. sensemaker, lmtest, sandwich)

results_m1_clustered.lmr <-  estimatr::lm_robust(m1.formula, data = austria_authors.df, clusters = bezirk)

results_m1_interactionsonly.lmr <-
  estimatr::lm_robust(formula("d_rr_06 ~ dv_pop_01:pct_noneu_06 -dv_pop_01 -pct_noneu_06"),
                      data = austria_authors.df)

results_m1_kitchensink.lmr <-
  estimatr::lm_robust(
    formula(
      "d_rr_06 ~ dv_pop_01:pct_noneu_06 +educ_tertiary +avg_income +lab_pct_manufact_01 +lab_pct_unemp +welfare_cap_06 +health_cap_06 +education_cap_06 +foreignborn_delta+citizen_eu_growth_pct +vacancy_01_public"
    ),
    data = austria_authors.df
  )

results_m1_kitchensinkmain.lmr <-
  estimatr::lm_robust(
    formula(
      "d_rr_06 ~ dv_pop_01+pct_noneu_06 +educ_tertiary +avg_income +lab_pct_manufact_01 +lab_pct_unemp +welfare_cap_06 +health_cap_06 +education_cap_06 +foreignborn_delta+citizen_eu_growth_pct +vacancy_01_public"
    ),
    data = austria_authors.df
  )

# vacancy has high missingbess
results_m1_kitchensink_novacancy.lmr <-
  estimatr::lm_robust(
    formula(
      "d_rr_06 ~ dv_pop_01:pct_noneu_06 +educ_tertiary +avg_income +lab_pct_manufact_01 +lab_pct_unemp +welfare_cap_06 +health_cap_06 +education_cap_06 +foreignborn_delta+citizen_eu_growth_pct "
    ),
    data = austria_authors.df
  )

results_m1_kitchensinkmain_novacancy.lmr <-
  estimatr::lm_robust(
    formula(
      "d_rr_06 ~ dv_pop_01+pct_noneu_06 +educ_tertiary +avg_income +lab_pct_manufact_01 +lab_pct_unemp +welfare_cap_06 +health_cap_06 +education_cap_06 +foreignborn_delta+citizen_eu_growth_pct "
    ),
    data = austria_authors.df
  )

results_m1_mainonly.lmr <-
  estimatr::lm_robust(formula("d_rr_06 ~ dv_pop_01 + pct_noneu_06 "), data = austria_authors.df)

results_m1_euonly.lmr <-
  estimatr::lm_robust(formula("d_rr_06 ~ pct_noneu_06 "), data = austria_authors.df)

results_m1_poponly.lmr <-
  estimatr::lm_robust(formula("d_rr_06 ~ dv_pop_01 "), data = austria_authors.df)

ml.ls <- list(
  author_model1 = results_m1_computational.lmr,
  author_clusterederr = results_m1_clustered.lmr,
  loaded_model = results_m1_kitchensink.lmr,
  loaded_main = results_m1_kitchensinkmain.lmr,
  loaded_nv = results_m1_kitchensink_novacancy.lmr,
  loaded_main_nv = results_m1_kitchensinkmain_novacancy.lmr,
  interaction = results_m1_interactionsonly.lmr,
  maineffects = results_m1_mainonly.lmr,
  single_eu = results_m1_euonly.lmr,
  single_pop = results_m1_poponly.lmr
)

alt_var_m1.df <- tidy_results(ml.ls)
alt_var_m1_summary.df <- tidy_summary(ml.ls)

alt_var_m1.df  %>% group_by(repl_id) %>% gt()
alt_var_m1_summary.df %>% group_by(repl_id) %>% gt()

rm(
  ml.ls,
  results_m1_clustered.lmr,
  results_m1_kitchensink.lmr,
  results_m1_interactionsonly.lmr,
  results_m1_kitchensink_novacancy.lmr,
  results_m1_kitchensinkmain_novacancy.lmr,
  results_m1_mainonly.lmr,
  results_m1_euonly.lmr,
  results_m1_poponly.lmr,
  results_m1_kitchensinkmain.lmr
)
```

#### Alternate Covariates & Model 2

```{r alternate-variables-m2}

#m2.formula<- formula("dv ~  (pctrental + pctpublic_w_zsp)")
#results_m2_computational.lmr <-
#  estimatr::lm_robust(m2.formula,   data = vienna_authors.df, 
#                      clusters = tract_key)

 estimatr::lm_robust(dv ~pcrental+public_w_zsp,   data = vienna_authors.df, 
                    clusters = tract_key)

ml.ls <- list(
  author_model2 = results_m2_computational.lmr
)


alt_var_m2.df <- tidy_results(ml.ls)
alt_var_m2_summary.df <- tidy_summary(ml.ls)

alt_var_m2.df  %>% group_by(repl_id) %>% gt()
alt_var_m2_summary.df %>% group_by(repl_id) %>% gt()

rm(
  ml.ls
)
```

#### Summary: Covariate Robustness

### Alternate data (data robustness)

#### Graphical Exploration (intraoccular impact)

To better understand the authors main claims, we attempt to visualize the trends they find in the raw data. We begin with the first analysis, which links support for far-right political parties in the 2006 federal election with the proportion of third-country nationals across Austrian municipalities.

```{r intraoccular-1}
requireNamespace("plotly")
## AUSTRIA
# Plot the relationship between % non-EU and change in vote share
suppressWarnings({
  austria_authors.df %>%
    ggplot(aes(x = pct_noneu_06, y = d_rr_06)) +
    geom_point() +
    labs(x = "% non-EU residents in municipality",
         y = "Change in far-right vote share") +
    # NOTE: There are ~200 municipalities with 0 non-EU residents
    scale_x_log10() +
    geom_smooth(method = lm)
} %>%
  plotly::ggplotly())


# Plot the relationship between % non-EU and vote share
suppressWarnings({
  austria_authors.df %>%
    ggplot(aes(x = pct_noneu_06, y = rr_share_06)) +
    geom_point() +
    labs(x = "% non-EU residents in municipality",
         y = "Far-right vote share") +
    # NOTE: There are ~200 municipalities with 0 non-EU residents
    scale_x_log10() +
    geom_smooth(method = lm)
} %>%
  plotly::ggplotly())


# Compare vote share in 2002 and 2006
suppressWarnings({
  austria_authors.df %>%
    select(pct_noneu_06, rr_share_06, rr_share_02) %>%
    pivot_longer(
      cols = starts_with("rr_share"),
      names_prefix = "rr_share_",
      names_to = "year",
      values_to = "vote_share"
    ) %>%
    ggplot(aes(x = pct_noneu_06, y = vote_share)) +
    geom_point() +
    labs(x = "% non-EU residents in municipality",
         y = "Far-right vote share") +
    # NOTE: There are ~200 municipalities with 0 non-EU residents
    scale_x_log10() +
    geom_smooth(method = lm) +
    facet_wrap(vars(year))
} %>%
  plotly::ggplotly())
```

Visual examination of the data indicates that (1) there is a *very* modest association between the percentage of third-country nationals and both the level of support and the *change* in the level of support for far-right parties in the 2006 elections; and (2) that this trend is more pronounced in 2006 than in 2002. One of this article's primary interests is, in addition, the interaction between these two factors---i.e., that support is driven by competition between Austrian and third-country nationals for housing, which is most accute when public housing rates and the proportion of the population that is third-country nationals are both high. To visualize this, we plot the relationship between the percentage of third-country nationals and support for far-right parties, stratifying by the percentage of the population that lives in public housing.

```{r intraoccular-2}
# Bin the percentage of the municipality in public housing and plot the
# change in vote share by % non-EU residents
cuts <-
  with(austria_authors.df,
       quantile(dv_pop_01, probs = seq(0, 1, 1 / 3),
                na.rm = TRUE))
suppressWarnings({
  austria_authors.df %>%
    mutate(pct_public_housing = cut(dv_pop_01, breaks = cuts, include.lowest = TRUE)) %>%
    # ~ 13 municipalities don't have data on public housing
    drop_na(pct_public_housing) %>%
    ggplot(aes(x = pct_noneu_06, y = d_rr_06)) +
    geom_point() +
    labs(x = "% non-EU residents in municipality",
         y = "Change in far-right vote share") +
    # NOTE: There are ~200 municipalities with 0 non-EU residents
    scale_x_log10() +
    geom_smooth(method = lm) +
    facet_wrap(vars(pct_public_housing))
} %>%
  plotly::ggplotly())
```

We see that while the trend line does appear to get steeper, it is estimated with a considerable amount of uncertainty; in particular, in all three cases, the trend is not visually apparent, and the slope of the fitted linear model has a high degree of uncertainty about sign.

We additionally color the observations based on the baseline level of support for far-right parties to see if an interaction with public housing rates and proportion of third-country nationals is apparent. In particular, it seems plausible that these relationships might be strengthened in places where the baseline support for far-right parties (as measured by their support in 2002) is already high.

```{r intraoccular-3}
# Add coloring based on how far-right the municipality was in the previous
# election
suppressWarnings({
  austria_authors.df %>%
    mutate(pct_public_housing = cut(dv_pop_01, breaks = cuts, include.lowest = TRUE)) %>%
    # ~ 13 municipalities don't have data on public housing
    drop_na(pct_public_housing) %>%
    ggplot(aes(x = pct_noneu_06, y = d_rr_06, color = rr_share_02)) +
    geom_point() +
    labs(x = "% non-EU residents in municipality",
         y = "Change in far-right vote share",
         color = "% far-right in\nprevious election") +
    # NOTE: There are ~200 municipalities with 0 non-EU residents
    scale_x_log10() +
    scale_color_gradient(low = "blue", high = "red") +
    geom_smooth(method = lm) +
    facet_wrap(vars(pct_public_housing))
} %>%
  plotly::ggplotly())
```

While some extreme outliers seem to be in places that were already far-right in 2002, no trend is immediately apparent.

Next, we consider the second analysis, which tries to more directly test whether direct competition for public housing between Austrian and third-country nationals explains increasing support for far-right parties in Vienna.

We begin by visualizing the relationship between the proportion of third-country nationals living in a tract, the proportion of residents living in public housing in a tract, and change in far-right vote share.

```{r inraoccular-4}
## VIENNA
# Plot the relationship between % non-EU and change in vote share
suppressWarnings({
  vienna_authors.df %>%
    ggplot(aes(x = pctforeign, y = dv)) +
    geom_point() +
    labs(x = "% non-EU residents in tract",
         y = "Change in far-right vote share") +
    # NOTE: There are ~15 tracts with no foreign residents
    scale_x_log10() +
    geom_smooth(method = lm)
} %>%
  plotly::ggplotly() 
)

# Plot the relationship between % in public housing and change in vote share
suppressWarnings({
  vienna_authors.df %>%
    ggplot(aes(x = pctpublic_w_zsp, y = dv)) +
    geom_point() +
    labs(x = "% of residents in public housing",
         y = "Change in far-right vote share") +
    # NOTE: There are ~900 tracts with no one in public housing
    scale_x_log10() +
    geom_smooth(method = lm)
  } %>%
  plotly::ggplotly())
```

We notice two important facts. First, the relationship between the percentage of individuals living in public housing and the change in far-right vote share is much more pronounced and positive in Vienna than in the national data. Second, the relationship between the percentage of third-country nationals and the far-right vote share is actually very pronounced and negative. To understand the interrelationship between these two factors, we stratify by the proportion of individuals living in public housing and plot the relationship between the percentage of third-country nationals and change in far-right vote share, and see that while the rate of support does seem to rise in the highest bin (i.e., those tracts where the largest number of people live in public housing), the trend within each bin remains fairly negative.

```{r intraoccular-4}
# Plot the relationship between % non-EU and change in vote share, stratified by
# the rate of public housing
cuts <-
  with(vienna_authors.df,
       quantile(
         pctpublic_w_zsp,
         probs = c(0, 1 / 2, 3 / 4, 1),
         na.rm = TRUE
       ))

suppressWarnings({
  vienna_authors.df %>%
    mutate(public_housing = cut(pctpublic_w_zsp, cuts, include.lowest = TRUE)) %>%
    ggplot(aes(x = pctforeign, y = dv)) +
    geom_point() +
    labs(x = "% non-EU residents in tract",
         y = "Change in far-right vote share") +
    # NOTE: There are ~15 tracts with no foreign residents
    scale_x_log10() +
    geom_smooth(method = lm) +
    facet_wrap(vars(public_housing))
} %>%
    plotly::ggplotly())

rm(cuts)
```

-   outlier analysis

First of all, we can have a look at the outliers in the main variables from Table 1 (Austrian sample). The following code visualizes the relationships between the main variables of interest: the percentage of non-EU residents, the percentage of people living in public housing, and the change in far-right vote share. From each of these variables, we drop 1% of the largest and smallest values. And then the plots compare the change in linear dependence between the variables.

```{r outliers_plots}
library(patchwork)

###### OUTLIERS PLOTS

p1 <- austria_authors.df %>%
  mutate(outlier = ifelse(
    (
      dv_pop_01 > quantile(dv_pop_01, 0.99, na.rm = T) |
        d_rr_06 > quantile(d_rr_06, 0.99, na.rm = T) |
        dv_pop_01 < quantile(dv_pop_01, 0.01, na.rm = T) |
        d_rr_06 < quantile(d_rr_06, 0.01, na.rm = T)
    ),
    T,
    F
  )) %>%
  ggplot(aes(x = dv_pop_01, y = d_rr_06)) +
  geom_point(aes(color = outlier), size = 1) +
  scale_color_manual(values = c('navy', 'red')) +
  ggtitle('') +
  ylab('Δ  2002–6') + xlab('% public housing') +
  geom_smooth(method = "lm",
              se = T,
              color = "red") +
  geom_smooth(
    data = . %>% filter(outlier == F),
    method = "lm",
    se = T,
    color = "blue"
  )  +
  geom_text(
    data = . %>%
      summarise(r2 = summary(lm(d_rr_06 ~ dv_pop_01))$r.squared),
    aes(
      label = paste("R^2 =", round(r2, 3)),
      x = 0.4,
      y = 0.2
    ),
    color = "red",
    hjust = 0
  ) +
  geom_text(
    data = . %>% filter(outlier == 0) %>%
      summarise(r2 = summary(lm(d_rr_06 ~ dv_pop_01))$r.squared),
    aes(
      label = paste("R^2 =", round(r2, 3)),
      x = 0.4,
      y = 0.18
    ),
    color = "blue",
    hjust = 0
  )

p2 <- austria_authors.df %>%
  mutate(outlier = ifelse(
    (
      pct_noneu_06 > quantile(pct_noneu_06, 0.99, na.rm = T) |
        d_rr_06 > quantile(d_rr_06, 0.99, na.rm = T) |
        pct_noneu_06 < quantile(pct_noneu_06, 0.01, na.rm = T) |
        d_rr_06 < quantile(d_rr_06, 0.01, na.rm = T)
    ),
    T,
    F
  )) %>%
  ggplot(aes(x = pct_noneu_06, y = d_rr_06)) +
  geom_point(aes(color = outlier), size = 1) +
  scale_color_manual(values = c('navy', 'red')) +
  ggtitle('') +
  ylab('Δ  2002–6') + xlab('% non-EU') +
  geom_smooth(method = "lm",
              se = T,
              color = "red") +
  geom_smooth(
    data = . %>% filter(outlier == F),
    method = "lm",
    se = T,
    color = "blue"
  )  +
  geom_text(
    data = . %>%
      summarise(r2 = summary(lm(
        d_rr_06 ~ pct_noneu_06
      ))$r.squared),
    aes(
      label = paste("R^2 =", round(r2, 3)),
      x = 0.15,
      y = 0.2
    ),
    color = "red",
    hjust = 0
  ) +
  geom_text(
    data = . %>% filter(outlier == 0) %>%
      summarise(r2 = summary(lm(
        d_rr_06 ~ pct_noneu_06
      ))$r.squared),
    aes(
      label = paste("R^2 =", round(r2, 3)),
      x = 0.15,
      y = 0.18
    ),
    color = "blue",
    hjust = 0
  )

p3 <- austria_authors.df %>%
  mutate(outlier = ifelse(
    (
      dv_pop_01 > quantile(dv_pop_01, 0.99, na.rm = TRUE) |
        d_rr_06 > quantile(d_rr_06, 0.99, na.rm = TRUE) |
        dv_pop_01 < quantile(dv_pop_01, 0.01, na.rm = TRUE) |
        d_rr_06 < quantile(d_rr_06, 0.01, na.rm = TRUE) |
        pct_noneu_06 > quantile(pct_noneu_06, 0.99, na.rm = TRUE) |
        d_rr_06 > quantile(d_rr_06, 0.99, na.rm = TRUE) |
        pct_noneu_06 < quantile(pct_noneu_06, 0.01, na.rm = TRUE) |
        d_rr_06 < quantile(d_rr_06, 0.01, na.rm = TRUE)
    ),
    TRUE,
    FALSE
  )) %>%
  ggplot(aes(x = I(pct_noneu_06 * pct_noneu_06), y = d_rr_06)) +
  geom_point(aes(color = outlier), size = 1) +
  scale_color_manual(values = c('navy', 'red')) +
  ggtitle('') +  # Add your plot title
  geom_smooth(method = "lm",
              se = T,
              color = "red") + # Add smoothed line for the whole sample
  geom_smooth(
    data = . %>% filter(outlier == F),
    method = "lm",
    se = T,
    color = "blue"
  )  +
  geom_text(
    data = . %>%
      summarise(r2 = summary(lm(
        d_rr_06 ~ I(pct_noneu_06 * pct_noneu_06)
      ))$r.squared),
    aes(
      label = paste("R^2 =", round(r2, 3)),
      x = 0.04,
      y = 0.2
    ),
    color = "red",
    hjust = 0
  ) +
  geom_text(
    data = . %>% filter(outlier == 0) %>%
      summarise(r2 = summary(lm(
        d_rr_06 ~ I(pct_noneu_06 * pct_noneu_06)
      ))$r.squared),
    aes(
      label = paste("R^2 =", round(r2, 3)),
      x = 0.04,
      y = 0.18
    ),
    color = "blue",
    hjust = 0
  )

suppressWarnings(print(p1+p2+p3))
rm(p1,p2,p3)
```

R-squared drops substantially when dropping outliers.

-   residual analysis

-   perturbation analysis

-   subsampling analysis

```{r alternate-data}

```

### Alternate Models (model and alternate hypothesis robustness)

-   specific alternate models ?

-   general model comparison and synthesis -- (e.g. bayesian model averaging)

```{r alternate-models}

```

### Summary - Replicability

## Conclusion

*State the most important results of your work and what you have learned. You may also describe other empirical exercises that could be conducted by other replicators.*

-   The research is computationally replicable, and likely reflect patterns in outcomes that are relevant to understanding the underlying data generating process.

-   Evidence for the overall primary and secondary causal claims is overstated. The model accounts for a small amount of the overall variance in results, and fits only marginally better than alternative simpler model with no interactions.

-   The overall weakness of the clims are obscured in the publications because of absence from publications of goodness-of-fit and naive prediction comparisons.

-   Conceptual reproducibility anlaysis is needed to further probe results, but obstructed by the absence of citations, documentation and linking codes that would enable reanalysis from original sources, or augmentation with richer data.
